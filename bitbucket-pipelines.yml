#image: lambci/lambda:build-nodejs6.10
#image: lambci/lambda:build-nodejs8.10
#image: lambci/lambda:build-nodejs10.x
image: lambci/lambda:build-nodejs12.x

pipelines:
  custom: # Pipelines that can only be triggered manually
    prod-deploy:
      - step:
          name: Test and deploy to production
          deployment: production
          caches:
            - gradle
          services:
            - mysql
          script:
          - npm cache clean -f
          - npm install -g npm@8.14.0
#          - npm install -g serverless --verbose
          - npm install -g serverless
          - npm install serverless-aws-documentation --save-dev
          - java -version
          - which javac
          - ./gradlew build
          - ls -l build/distributions/
          - export AWS_ACCESS_KEY_ID=$AWS_ACCESS_KEY_ID
          - export AWS_SECRET_ACCESS_KEY=$AWS_SECRET_ACCESS_KEY
          - serverless deploy --stage prod
  default:
    - step:
        name: Test and deploy to test
        deployment: test
        caches:
          - gradle
        services:
          - mysql
        script:
          - npm cache clean -f
          - npm install -g npm@8.14.0
#          - npm install -g serverless --verbose
          - npm install -g serverless
          - npm install serverless-aws-documentation --save-dev
          - yum -y update
          - yum install -y java-18-amazon-corretto-devel
          - echo $JAVA_HOME
          - java -version
          - which javac
          - ./gradlew build
          - ls -l build/distributions/
          - export AWS_ACCESS_KEY_ID=$AWS_ACCESS_KEY_ID
          - export AWS_SECRET_ACCESS_KEY=$AWS_SECRET_ACCESS_KEY
          - serverless deploy
definitions:
  services:
    mysql:
      image: mysql:5.6
      environment:
        MYSQL_DATABASE: posapps_product_test
        MYSQL_USER: posapps_test
        MYSQL_ROOT_PASSWORD: password
        MYSQL_PASSWORD: password